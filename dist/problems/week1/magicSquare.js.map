{"version":3,"sources":["src/problems/week1/magicSquare.es6.js"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAM,QAAQ,GAAG,OAAO,CAAI,OAAO,qBAAkB,CAAC,QAAQ,CAAC;;AAExD,SAAS,WAAW,CAAC,IAAI,EAAE;AAChC,MAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AACjC,MAAI,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,CAAA,GAAI,CAAC,CAAA;AACtB,MAAI,CAAC,GAAG,CAAC,CAAC;AACV,MAAI,CAAC,GAAG,CAAC,CAAC;AACV,OAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;AAClB,SAAM,CAAC,aAAI,IAAI,EAAI,CAAC,CAAA,EAAC;AACnB,QAAG,CAAC,cAAK,IAAI,EAAI,CAAC,CAAA,EAAE;AAClB,WAAK,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAA,GAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;KACvC,MAAM,IAAG,CAAC,GAAG,IAAI,IAAI,CAAC,EAAC;oBACb,MAAM,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;;;AAA9B,OAAC;AAAE,OAAC;;AACL,WAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;AACpB,WAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;KACnB,MAAM;qBACI,MAAM,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;;;;AAA9B,OAAC;AAAE,OAAC;;AACL,WAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;KACnB;GACF;AACD,SAAO,KAAK,CAAC;CACd;;AAED,SAAS,MAAM,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE;AAC/B,MAAI,OAAO,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,CAAC;AAC5C,MAAI,OAAO,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC,CAAC;AAC5C,SAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;CAC3B;;AAEM,SAAS,MAAM,CAAC,KAAK,EAAC;AAC3B,OAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;AACnC,QAAI,GAAG,GAAG,EAAE,CAAC;AACb,SAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;AACnC,SAAG,IAAI,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,AAAC,CAAC;KACzD;AACD,WAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;GAClB;AACD,SAAO,CAAC,GAAG,EAAE,CAAC;CACf;;AAEM,SAAS,QAAQ,CAAC,IAAI,EAAC;AAC5B,SAAO,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC;CACvB","file":"src/problems/week1/magicSquare.es6.js","sourcesContent":["const newArray = require(`${appRoot}/shared/helpers`).newArray;\n\nexport function magicSquare(size) {\n  var state = newArray(size, size);\n  var x = (size - 1) / 2\n  var y = 0;\n  var i = 1;\n  state[y][x] = i++;\n  while(i <= size ** 2){\n    if(i === size ** 2 ){\n      state[size - 1][(size - 1) / 2] = i++;\n    } else if(i % size == 0){\n      [x, y] = getPos(size - 1, x, y);\n      state[y++][x] = i++;\n      state[y][x] = i++;\n    } else {\n      [x, y] = getPos(size - 1, x, y)\n      state[y][x] = i++;\n    }\n  }\n  return state;\n}\n\nfunction getPos(max, posx, posy) {\n  let newPosX = posx + 1 > max ? 0 : posx + 1;\n  let newPosY = posy - 1 < 0 ? max : posy - 1;\n  return [newPosX, newPosY];\n}\n\nexport function output(state){\n  for(var i = 0; i < state.length; i++){\n    var row = \"\";\n    for(var j = 0; j < state.length; j++){\n      row += \" \" + (state[i][j] === null ? \"0\" : state[i][j]);\n    }\n    console.log(row);\n  }\n  console.log();\n}\n\nexport function validate(size){\n  return size % 2 === 1;\n}\n"]}